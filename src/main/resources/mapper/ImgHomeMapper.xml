<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 你要用配置文件去写对应的接口, 那么你这个配置文件就要声明清楚对应的是哪个接口
    mapper标签的namespace这个属性上写上对应的接口
-->
<mapper namespace="com.example.bootmybatis.dao.ImgHomeDao">
    <!-- 我们可以通过封装结果集来完成对数据库和属性字段的映射关系-->
    <!-- id 当前这个结果集的唯一标识
         type: 我要映射的是哪个对象的属性(写这个对象所在的全路径)
         可以重复利用
    -->
    <resultMap id="ImgHomeMap" type="com.example.bootmybatis.entity.ImgHome">
        <!-- 主键的映射 id标签 不是主键都用result标签-->
        <!--property=""  写的是对象中的属性名  column="" 数据库中的字段 -->
        <id property="id" column="id"></id>
        <result property="img" column="pic_data"></result>
    </resultMap>

    <!--查询全部-->
    <!-- 如果你的返回值是一个集合的话, 那么你只需要做一件事情, 就是返回值类型设置成对应的泛型所在路径就可以了-->
    <!-- 如果出现了 实体类的对象属性名和数据库中的字段名不匹配的时候 要怎么处理-->
    <select id="getAllImgFirst" resultType="com.example.bootmybatis.entity.ImgHome">
        SELECT
        id,
        pic_data as img
        FROM imgfirst
    </select>
    <select id="getAllImgSecond" resultType="com.example.bootmybatis.entity.ImgHome">
        SELECT
        id,
        pic_data as img
        FROM imgsecond
    </select>
    <select id="getAllImgThird" resultType="com.example.bootmybatis.entity.ImgHome">
        SELECT
        id,
        pic_data as img
        FROM imgthird
    </select>
</mapper>